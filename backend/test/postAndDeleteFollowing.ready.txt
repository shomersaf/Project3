const { expect } = require("chai")
const axios = require("axios")
const useId = 5;
const vcnId = 5;

describe("POST /following/new", function(){
  
  it("Follow vacation - Success ", async function () {
  //I can't randomize the id values here 'causethey depend on other tables values as foreign keys
  //not existing technically can't be sent from UI
  //so we may use here potentially existing id as const
  //the pairs won't be duplicated - it woul be provided in UI
  //the fn-s provided in UI shoul be tested in there
  //anyway these are dummy ids

    const dummyFolowwing = {
        "userId":useId, 
        "vcnId":vcnId
    }
    
    const result = await axios.post("http://localhost:4001/following/new", dummyFolowwing)
    expect(result.status).equal(200)
});
})

describe("DELETE /following/delete", function(){
  //we'll delete right what we created here to clear the dummy data by the way)
  it("Delete following - Success ", async function () {

    const dummyFollowing = {
        "userId":useId, 
        "vcnId":vcnId
    }
    console.log(JSON.stringify(dummyFollowing))
    const result = await axios.delete("http://localhost:4001/following/delete", {data: dummyFollowing, timeout: 1000 * 5,})
    // console.log(`result.status = ${result.status}`)
    // console.log(result)
    expect(result.status).equal(200)
});
})